
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(cuid()) @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String? 
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? 
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
model User {
  id            String    @id @default(cuid()) @map("_id")
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  isAdmin       Boolean  @default(false)
  createdAt DateTime @default(now()) 
  accounts      Account[]
  sessions      Session[]
  userDocument  UserDocument?
}

model UserDocument {
  id   String  @id @default(cuid()) @map("_id")
  username String? 
  email   String?
  userId String @unique
  bio  String?
  avatar  String?
  profession String?
  date_birthday String?
  onboardingCompleted Boolean @default(false)
  adresse String?
  tel String?
  how_did_where  String?
  createdAt DateTime @default(now()) 
  user  User  @relation(fields:[userId] , references: [id], onDelete:Cascade)

}

model VerificationToken {
  identifier String @id @map("_id")
  token      String  @unique  
  expires    DateTime

  @@unique([identifier, token])
}
